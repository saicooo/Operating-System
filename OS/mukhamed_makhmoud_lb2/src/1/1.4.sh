#!/bin/bash
# =========================== НАЗНАЧЕНИЕ ===========================
# Скрипт для анализа и классификации процессов Linux на системные 
# и пользовательские. Определение системных процессов выполняется 
# по младшему биту флагов процесса (если нечетный - системный).
# Системные процессы запускаются ядром и имеют критическое значение
# для функционирования системы, а пользовательские процессы 
# запускаются пользователями и приложениями.
# ==================================================================
# 
# ============================ КОМАНДЫ =============================
# ps -lp PID - вывод информации о процессе с конкретным PID
# ps -e - вывод всех процессов
# ps -eo pid,user,comm,flags - вывод списка всех PID, пользователей, команд и флагов
# ps -el | grep NAME - поиск процесса по имени
# ==================================================================

echo "Примеры системных процессов: "

echo -e "\nПроцесс 'systemd/init': инициализирует систему и запускает другие процессы:"
ps -lp 1

echo -e "\nПроцесс 'kthreadd': контролирует создание, выполнение и завершение потоков ядра:"
ps -lp 2

echo -e "\nПроцесс 'kswapd': управляет подкачкой памяти:"
ps -el | grep "kswapd" | awk '{print $4}' | xargs ps -lp

echo -e "\nПроцесс 'systemd-udevd': управляет устройствами:"
ps -el | grep "systemd-udevd" | awk '{print $4}' | xargs ps -lp

echo -e "\nСПИСОК ВСЕХ ПРОЦЕССОВ:"
printf "%-5s %-7s %-10s %-17s %-10s\n" "ФЛАГ" " PID" " USER" " CMD" " ТИП"  
ps -eo pid,user,comm,flags --no-headers | while read -r pid user comm flags; do
    if (( "$flags" % 2 == 1 )); then
        printf "%-5s %-7s %-10s %-17s %-10s\n" "$flags" "$pid" "$user" "$comm" "Системный"
    else
        printf "%-5s %-7s %-10s %-17s %-10s\n" "$flags" "$pid" "$user" "$comm" "Пользовательский"
    fi
done
