#!/bin/bash
# =========================== НАЗНАЧЕНИЕ ===========================
# Демонстрация различных реакций процессов на сигналы:
#
# 1. Создание родительского процесса (father), порождающего потомков
# 2. Демонстрация реакции по умолчанию на сигнал SIGUSR1 (son1)
# 3. Демонстрация игнорирования сигнала SIGUSR1 (son2)
# 4. Демонстрация перехвата и обработки сигнала SIGUSR1 (son3)
#
# Программа показывает состояние процессов до и после отправки
# сигналов, демонстрируя различные механизмы обработки сигналов в
# операционной системе UNIX/Linux.
# ==================================================================
# 
# ============================ КОМАНДЫ =============================
# Скрипт выполняет следующие действия:
# 1. Создаёт пустой лог-файл для записи результатов (3.1.log)
# 2. Компилирует программы father, son1, son2, son3
# 3. Запускает родительский процесс, который создаёт потомков
# 4. Родительский процесс отправляет сигналы SIGUSR1 всем потомкам
# 5. Записывает результаты выполнения в лог-файл
# 6. Выводит содержимое лог-файла для анализа
# 7. Удаляет временные исполняемые файлы (очистка)
# ==================================================================
# 

DIRECTORY="3/3.1"
LOGFILE="3.1.log"

SRC_FILES=("father.c" "son1.c" "son2.c" "son3.c")
EXEC=("father" "son1" "son2" "son3")

compilate_files() {
    local -n src_files=$1
    local -n obj_files=$2

    local count=${#src_files[@]}
    for ((i=0; i<"$count"; i++)); do
        gcc "${src_files[$i]}" -o "${obj_files[$i]}"
    done
}

cd "$DIRECTORY"
> "$LOGFILE"

compilate_files SRC_FILES EXEC

./"${EXEC[0]}" &>> "$LOGFILE"

cat "$LOGFILE"

rm "${EXEC[@]}"