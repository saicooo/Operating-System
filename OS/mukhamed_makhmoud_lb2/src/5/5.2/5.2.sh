#!/bin/bash
# =========================== НАЗНАЧЕНИЕ ===========================
# Исследование приоритетов процессов в Linux с использованием команды 
# nice(1) и системного вызова getpriority(2):
#
# 1. Получение текущего приоритета процесса (nice value) с помощью getpriority
# 2. Изменение приоритета процесса с использованием setpriority и nice
# 3. Сравнение возможностей изменения приоритетов для пользовательских 
#    и системных процессов
# 4. Анализ реакции системы на попытки изменения приоритета
#
# Скрипт демонстрирует работу с приоритетами процессов в Linux и различия
# в возможностях изменения приоритетов для разных типов процессов.
# ==================================================================
# 
# ============================ КОМАНДЫ =============================
# Скрипт выполняет следующие действия:
# 1. Компилирует исходный файл prog.c
# 2. Запускает скомпилированную программу, которая:
#    - Определяет текущий приоритет (nice value) процесса
#    - Пытается изменить приоритет через setpriority
#    - Пытается изменить приоритет относительно с помощью nice
#    - Пытается получить и изменить приоритет системного процесса
# 3. Записывает результаты выполнения в файл 5.2.log
# 4. Выводит содержимое лог-файла на экран
# ==================================================================
# 

DIRECTORY="5/5.2"
LOGFILE="5.2.log"

SRC_FILES=("prog.c")
EXEC=("prog")

compilate_files() {
    local -n src_files=$1
    local -n obj_files=$2

    local count=${#src_files[@]}
    for ((i=0; i<"$count"; i++)); do
        gcc "${src_files[$i]}" -o "${obj_files[$i]}"
    done
}

cd "$DIRECTORY"
> "$LOGFILE"

compilate_files SRC_FILES EXEC

./"${EXEC[0]}" &>> "$LOGFILE"

cat "$LOGFILE"

rm "${EXEC[@]}"