#!/bin/bash
# =========================== НАЗНАЧЕНИЕ ===========================
# Демонстрация работы функций семейства exec() для создания процессов
# с различными параметрами и аргументами:
#
# 1. execl()  - выполняет программу со списком аргументов и полным путём
# 2. execlp() - выполняет программу со списком аргументов, поиск по PATH
# 3. execle() - как execl, но с передачей переменных окружения
# 4. execv()  - выполняет программу с аргументами в виде массива
# 5. execvp() - как execv, но с поиском программы по PATH
# 6. execve() - как execv, но с передачей переменных окружения
#
# Все эти функции заменяют текущий процесс новой программой
# и не возвращают управление в случае успеха.
# ==================================================================
# 
# ============================ КОМАНДЫ =============================
# Скрипт выполняет следующие действия:
# 1. Создаёт пустой лог-файл для записи результатов (2.3.log)
# 2. Компилирует демонстрационную программу (exec_demo.c: demo)
# 3. Запускает программу, которая показывает все функции exec()
# 4. Записывает результаты выполнения в лог-файл
# 5. Выводит содержимое лог-файла для анализа
# 6. Удаляет временный исполняемый файл (очистка)
# ==================================================================
# 

LOGFILE="2.3.log"
DIRECTORY="2/2.3"

SRC_FILES=("exec_demo.c")
EXEC=("demo")

compilate_files() {
    local -n src_files=$1
    local -n obj_files=$2

    local count=${#src_files[@]}
    for ((i=0; i<"$count"; i++)); do
        gcc "${src_files[$i]}" -o "${obj_files[$i]}"
    done
}

cd "$DIRECTORY"
> "$LOGFILE"

compilate_files SRC_FILES EXEC

./"${EXEC[0]}" &>> "$LOGFILE"

cat "$LOGFILE"

rm "${EXEC[@]}"
