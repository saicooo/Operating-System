#!/bin/bash
# =========================== НАЗНАЧЕНИЕ ===========================
# Демонстрация работы программ (однократного и циклического)
# вычисления родителя и его потомка с использованием системного вызова fork().
#
# single.c - демонстрирует однократное вычисление и базовый принцип fork()
# cycle.c - показывает длительные вычисления и планирование процессов ОС
# ==================================================================
# 
# ============================ КОМАНДЫ =============================
# Скрипт выполняет следующие действия:
# 1. Создает пустой лог-файл для записи результатов (2.1.log)
# 2. Компилирует программу однократных вычислений (single.c: single)
# 3. Запускает программу однократных вычислений и записывает вывод в лог
# 4. Компилирует программу циклических вычислений (cycle.c: cycle)
# 5. Запускает программу циклических вычислений и записывает вывод в лог
# 6. Выводит содержимое лог-файла на экран для анализа результатов
# 7. Удаляет временные исполняемые файлы (очистка)
#
# Вывод:
# - Адресное пространство у каждого процесса независимо
# ==================================================================
#

DIRECTORY="2/2.1"
LOGFILE="2.1.log"

SRC_FILES=("single.c" "cycle.c")
EXEC=("single" "cycle")

compilate_files() {
    local -n src_files=$1
    local -n obj_files=$2

    local count=${#src_files[@]}
    for ((i=0; i<"$count"; i++)); do
        gcc "${src_files[$i]}" -o "${obj_files[$i]}"
    done
}

cd "$DIRECTORY"
> "$LOGFILE"

compilate_files SRC_FILES EXEC

# Компилируем и запускаем первую программу с заголовком
echo "===== ДЕМОНСТРАЦИЯ ОДНОКРАТНОГО ВЫЧИСЛЕНИЯ =====" >> "$LOGFILE"
./"${EXEC[0]}" &>> "$LOGFILE"
echo -e "\n=================================\n" >> "$LOGFILE"

# Компилируем и запускаем вторую программу с заголовком
echo "===== ДЕМОНСТРАЦИЯ ЦИКЛИЧЕСКОГО ВЫЧИСЛЕНИЯ =====" >> "$LOGFILE"
./"${EXEC[1]}" &>> "$LOGFILE"
echo -e "\n=================================\n" >> "$LOGFILE"

cat "$LOGFILE"

rm "${EXEC[@]}"