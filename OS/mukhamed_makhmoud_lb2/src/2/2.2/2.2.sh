#!/bin/bash
# =========================== НАЗНАЧЕНИЕ ===========================
# Демонстрация взаимодействия процессов родителя и потомка,
# размещенных в разных файлах (father.c и son.c).
#
# father.c - создаёт потомка через fork() и запускает son через execl()
# son.c - отдельная программа, заменяющая образ дочернего процесса
# ==================================================================
# 
# ============================ КОМАНДЫ =============================
# Скрипт выполняет следующие действия:
# 1. Создает пустой лог-файл для записи результатов (2.2.log)
# 2. Компилирует программу родителя (father.c: father)
# 3. Компилирует программу потомка (son.c: son)
# 4. Запускает программу родителя, которая создает и выполняет потомка
# 5. Выводит содержимое лог-файла для анализа таблиц процессов
# 6. Удаляет временные исполняемые файлы (очистка)
# ==================================================================
# 

LOGFILE="2.2.log"
DIRECTORY="2/2.2"

SRC_FILES=("father.c" "son.c")
EXEC=("father" "son")

compilate_files() {
    local -n src_files=$1
    local -n obj_files=$2

    local count=${#src_files[@]}
    for ((i=0; i<"$count"; i++)); do
        gcc "${src_files[$i]}" -o "${obj_files[$i]}"
    done
}

cd "$DIRECTORY"
> "$LOGFILE"

compilate_files SRC_FILES EXEC

./"${EXEC[0]}" &>> "$LOGFILE"

cat "$LOGFILE"

rm "${EXEC[@]}"